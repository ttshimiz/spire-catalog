%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 3.03
%%Creator: matplotlib version 1.3.1, http://matplotlib.org/
%%Title: Paper/f250_f350_color.eps
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: 283x227 283 227 0 () ()
%%BoundingBox: 0 0 283 227
%%Pages: 1
%%EndComments
%%BeginProlog
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%%BeginProlog
%%BeginResource: procset xpdf 3.03 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_13_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-44 -250 1009 750] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 23 dict def
CharProcs begin
/S {
555 0 56 -21 499 705 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.32515 0 0 4.32515 0 0] cm
1294.75 -300.567 m
1294.75 5063.4 l
1294.75 5179.01 1364.11 5248.37 1502.84 5248.37 c
1780.28 5248.37 l
1826.52 5248.37 1849.65 5225.25 1895.89 5179.01 c
1942.13 5132.77 1965.25 5109.65 1965.25 5063.4 c
1965.25 3537.45 2427.66 2381.42 3375.6 1549.08 c
4300.43 716.738 5525.82 300.567 7051.77 300.567 c
7583.55 300.567 8069.08 439.291 8531.49 762.979 c
8970.78 1063.55 9317.59 1456.6 9571.91 1965.25 c
9826.24 2473.9 9964.96 2982.55 9964.96 3537.45 c
9964.96 3999.86 9872.48 4439.15 9687.52 4878.44 c
9502.55 5317.73 9225.11 5710.78 8878.3 6034.47 c
8508.37 6358.16 8115.32 6566.24 7676.03 6681.84 c
4670.35 7421.7 l
3676.17 7676.03 2866.95 8207.8 2242.7 9040.14 c
1595.32 9849.36 1294.75 10774.2 1294.75 11791.5 c
1294.75 12577.6 1479.72 13340.6 1895.89 14034.2 c
2312.06 14727.8 2843.83 15259.6 3537.45 15675.7 c
4231.06 16091.9 4970.92 16300 5780.14 16300 c
7306.1 16300 8531.49 15768.2 9456.31 14727.8 c
10404.3 16230.6 l
10450.5 16276.9 10496.7 16300 10566.1 16300 c
10727.9 16300 l
10774.2 16300 10797.3 16276.9 10843.5 16253.8 c
10889.8 16207.5 10912.9 16161.3 10912.9 16115 c
10912.9 10751.1 l
10912.9 10612.3 10843.5 10543 10727.9 10543 c
10450.5 10543 l
10311.8 10543 10242.4 10612.3 10242.4 10751.1 c
10242.4 11121 10173 11560.3 10034.3 12022.7 c
9895.6 12485.1 9733.76 12947.5 9502.55 13363.7 c
9271.35 13779.9 9017.02 14149.8 8739.57 14427.2 c
7999.72 15167.1 7005.53 15560.1 5780.14 15560.1 c
5248.37 15560.1 4762.84 15421.4 4323.55 15144 c
3861.13 14866.5 3514.33 14519.7 3260 14057.3 c
2982.55 13594.9 2866.95 13132.5 2866.95 12623.8 c
2866.95 11953.3 3051.91 11352.2 3468.09 10820.4 c
3884.26 10265.5 4416.03 9918.72 5086.52 9756.88 c
8092.2 9017.02 l
8577.73 8878.3 9040.14 8670.21 9479.43 8369.65 c
9918.72 8045.96 10288.7 7699.15 10589.2 7282.98 c
10889.8 6866.81 11121 6404.4 11282.8 5895.74 c
11444.7 5387.09 11537.2 4855.32 11537.2 4323.55 c
11537.2 3491.21 11329.1 2705.11 10959.1 1965.25 c
10566.1 1225.39 10034.3 624.255 9340.71 184.965 c
8647.09 -254.326 7884.11 -485.532 7051.77 -485.532 c
6543.12 -485.532 6011.35 -416.17 5479.57 -300.567 c
4947.8 -184.965 4462.27 -23.1206 3999.86 184.965 c
3537.45 416.17 3144.4 716.738 2774.47 1086.67 c
1803.4 -416.17 l
1757.16 -462.411 1687.8 -485.532 1641.56 -485.532 c
1502.84 -485.532 l
1364.11 -485.532 1294.75 -416.17 1294.75 -300.567 c
f*
Q
Q
} def
/R {
736 0 33 -21 732 683 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.4908 0 0 4.4908 0 0] cm
734.836 0 m
734.836 779.372 l
2249.04 779.372 3028.42 1002.05 3028.42 1491.94 c
3028.42 13716.9 l
3028.42 14184.6 2249.04 14429.5 734.836 14429.5 c
734.836 15208.9 l
7726.91 15208.9 l
8550.82 15208.9 9419.26 15053 10354.5 14763.5 c
11267.5 14451.8 12024.6 14006.4 12648.1 13382.9 c
13271.6 12759.4 13583.3 12024.6 13583.3 11178.4 c
13583.3 10554.9 13382.9 9998.22 13026.6 9508.33 c
12648.1 9018.44 12158.2 8595.36 11579.2 8283.61 c
11000.3 7949.59 10399 7704.64 9797.81 7571.04 c
10465.8 7326.09 11044.8 6947.54 11534.7 6457.65 c
12024.6 5945.49 12336.3 5366.53 12447.7 4720.77 c
12759.4 2738.93 l
12893 1848.22 13048.9 1180.19 13204.8 734.836 c
13360.7 289.481 13716.9 89.071 14273.6 89.071 c
14719 89.071 15075.3 289.481 15298 734.836 c
15520.6 1157.92 15654.2 1625.55 15654.2 2137.7 c
15654.2 2182.24 15676.5 2226.78 15721 2271.31 c
15765.6 2315.85 15810.1 2338.11 15876.9 2338.11 c
16077.3 2338.11 l
16210.9 2338.11 16300 2226.78 16300 2048.63 c
16300 1625.55 16210.9 1224.73 16055.1 846.175 c
15876.9 445.355 15654.2 133.607 15364.8 -89.071 c
15053 -334.016 14696.7 -467.623 14295.9 -467.623 c
13227 -467.623 12291.8 -200.41 11534.7 311.749 c
10755.3 846.175 10376.8 1625.55 10376.8 2649.86 c
10376.8 4631.69 l
10376.8 5366.53 10109.6 5990.03 9597.4 6524.45 c
9062.98 7058.88 8439.48 7326.09 7704.64 7326.09 c
5032.51 7326.09 l
5032.51 1491.94 l
5032.51 1002.05 5789.62 779.372 7326.09 779.372 c
7326.09 0 l
734.836 0 l
5032.51 7905.05 m
7415.16 7905.05 l
8639.89 7905.05 9575.14 8150 10220.9 8639.89 c
10866.7 9129.78 11200.7 9975.96 11200.7 11178.4 c
11200.7 12358.6 10866.7 13204.8 10243.2 13694.7 c
9597.4 14184.6 8662.16 14429.5 7415.16 14429.5 c
6168.17 14429.5 l
5900.96 14429.5 5678.28 14407.2 5544.67 14385 c
5388.8 14362.7 5255.19 14295.9 5166.12 14206.8 c
5077.05 14095.5 5032.51 13939.6 5032.51 13716.9 c
5032.51 7905.05 l
f*
Q
Q
} def
/H {
750 0 31 0 718 683 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.40491 0 0 4.40491 0 0] cm
703.76 0 m
703.76 794.568 l
2247.49 794.568 3042.06 1021.59 3042.06 1521.03 c
3042.06 13984.4 l
3042.06 14461.1 2247.49 14710.9 703.76 14710.9 c
703.76 15505.4 l
7491.64 15505.4 l
7491.64 14710.9 l
5925.21 14710.9 5153.34 14461.1 5153.34 13984.4 c
5153.34 8467.83 l
11850.4 8467.83 l
11850.4 13984.4 l
11850.4 14461.1 11055.8 14710.9 9512.12 14710.9 c
9512.12 15505.4 l
16300 15505.4 l
16300 14710.9 l
14733.6 14710.9 13961.7 14461.1 13961.7 13984.4 c
13961.7 1521.03 l
13961.7 1021.59 14733.6 794.568 16300 794.568 c
16300 0 l
9512.12 0 l
9512.12 794.568 l
11055.8 794.568 11850.4 1021.59 11850.4 1521.03 c
11850.4 7673.26 l
5153.34 7673.26 l
5153.34 1521.03 l
5153.34 1021.59 5925.21 794.568 7491.64 794.568 c
7491.64 0 l
703.76 0 l
f*
Q
Q
} def
/G {
784 0 56 -21 735 705 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.5092 0 0 4.5092 0 0] cm
5100.68 2372.93 m
5632.93 1707.62 6276.05 1197.55 7052.24 842.721 c
7806.26 465.714 8626.8 288.299 9469.52 288.299 c
10267.9 288.299 11021.9 487.891 11687.2 909.252 c
12352.5 1330.61 12707.3 1929.39 12707.3 2705.58 c
12707.3 4568.44 l
12707.3 5034.15 11775.9 5278.1 9935.24 5278.1 c
9935.24 6054.29 l
16300 6054.29 l
16300 5278.1 l
15812.1 5278.1 15435.1 5233.74 15169 5145.03 c
14902.9 5056.33 14769.8 4878.91 14769.8 4568.44 c
14769.8 199.592 l
14769.8 133.061 14747.6 88.7075 14703.3 44.3537 c
14658.9 0 14614.6 0 14570.2 0 c
14437.1 0 14193.2 155.238 13882.7 487.891 c
13550.1 798.367 13306.1 1086.67 13128.7 1352.79 c
12751.7 731.837 12175.1 266.122 11421.1 -22.1769 c
10644.9 -310.476 9846.53 -465.714 9003.81 -465.714 c
7562.31 -465.714 6253.88 -88.7075 5078.5 620.952 c
3880.95 1352.79 2949.52 2350.75 2262.04 3592.65 c
1574.56 4834.56 1241.9 6165.17 1241.9 7584.49 c
1241.9 8626.8 1441.5 9646.94 1840.68 10622.7 c
2239.86 11598.5 2794.29 12485.6 3503.95 13239.6 c
4213.61 13993.6 5034.15 14570.2 5987.76 14991.6 c
6919.18 15412.9 7939.32 15634.7 9003.81 15634.7 c
9757.82 15634.7 10489.7 15457.3 11177.1 15146.8 c
11842.4 14814.1 12463.4 14348.4 12995.6 13749.7 c
14281.9 15568.2 l
14370.6 15612.5 14415 15634.7 14437.1 15634.7 c
14592.4 15634.7 l
14636.7 15634.7 14658.9 15612.5 14703.3 15568.2 c
14747.6 15523.8 14769.8 15501.6 14769.8 15457.3 c
14769.8 9469.52 l
14769.8 9336.46 14703.3 9269.93 14592.4 9269.93 c
14193.2 9269.93 l
14060.1 9269.93 13993.6 9336.46 13993.6 9469.52 c
13993.6 9890.88 13904.9 10356.6 13727.5 10888.8 c
13550.1 11421.1 13350.5 11909 13084.4 12396.9 c
12818.2 12862.6 12507.8 13283.9 12175.1 13638.8 c
11332.4 14437.1 10378.8 14858.5 9314.29 14858.5 c
8471.56 14858.5 7695.37 14658.9 6941.36 14304.1 c
6187.35 13927.1 5566.39 13417 5056.33 12773.9 c
4501.9 12064.2 4124.9 11288 3925.31 10401 c
3703.54 9513.88 3614.83 8582.45 3614.83 7584.49 c
3614.83 5300.27 4102.72 3570.48 5100.68 2372.93 c
f*
Q
Q
} def
/space {
333 0 0 0 0 0 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
Q
} def
/T {
722 0 36 0 685 683 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.20245 0 0 4.20245 0 0] cm
4021.46 0 m
4021.46 832.847 l
4806.72 832.847 5568.18 856.642 6329.63 951.825 c
7091.09 1047.01 7471.82 1261.17 7471.82 1594.31 c
7471.82 14658.1 l
7471.82 14991.2 7376.64 15205.4 7186.28 15300.6 c
6995.91 15372 6686.57 15419.6 6258.25 15419.6 c
5258.83 15419.6 l
3950.07 15419.6 3022.04 15134 2474.74 14562.9 c
2189.2 14277.4 1975.04 13801.5 1856.06 13182.8 c
1713.28 12540.3 1618.1 11755 1546.72 10803.2 c
856.642 10803.2 l
1308.76 16252.4 l
15847.9 16252.4 l
16300 10803.2 l
15609.9 10803.2 l
15514.7 11826.4 15395.8 12635.5 15300.6 13230.4 c
15181.6 13825.3 14967.4 14277.4 14681.9 14562.9 c
14110.8 15134 13182.8 15419.6 11897.8 15419.6 c
10898.4 15419.6 l
10612.8 15419.6 10374.9 15395.8 10232.1 15372 c
10065.5 15348.2 9922.77 15276.8 9827.59 15181.6 c
9732.41 15062.6 9684.82 14896.1 9684.82 14658.1 c
9684.82 1594.31 l
9684.82 1261.17 10041.8 1047.01 10803.2 951.825 c
11564.7 856.642 12326.1 832.847 13135.2 832.847 c
13135.2 0 l
4021.46 0 l
f*
Q
Q
} def
/A {
750 0 32 0 717 716 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.39877 0 0 4.39877 0 0] cm
727.476 0 m
727.476 795.676 l
2091.49 795.676 2909.9 1227.62 3228.17 2136.96 c
8002.23 16027.2 l
8047.7 16186.3 8161.37 16277.3 8365.97 16277.3 c
8661.51 16277.3 l
8843.37 16277.3 8979.78 16186.3 9025.24 16027.2 c
14003.9 1523.15 l
14140.3 1204.88 14390.4 1000.28 14799.6 909.344 c
15208.8 818.41 15708.9 795.676 16300 795.676 c
16300 0 l
9957.32 0 l
9957.32 795.676 l
11207.7 795.676 11844.2 1000.28 11844.2 1409.48 c
11844.2 1523.15 l
10616.6 5069.6 l
5092.33 5069.6 l
4069.32 2136.96 l
4046.58 2091.49 4046.58 2000.56 4046.58 1909.62 c
4046.58 1523.15 4228.45 1250.35 4592.19 1068.48 c
4955.93 886.611 5342.4 795.676 5751.6 795.676 c
5751.6 0 l
727.476 0 l
5365.13 5865.27 m
10343.8 5865.27 l
7843.1 13117.3 l
5365.13 5865.27 l
f*
Q
Q
} def
/B {
708 0 34 0 651 683 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.19018 0 0 4.19018 0 0] cm
811.42 0 m
811.42 835.285 l
2434.26 835.285 3269.55 1073.94 3269.55 1598.98 c
3269.55 14701 l
3269.55 15202.2 2434.26 15464.7 811.42 15464.7 c
811.42 16300 l
9593.85 16300 l
10405.3 16300 11216.7 16132.9 12028.1 15822.7 c
12839.5 15512.4 13531.6 15059 14080.5 14438.5 c
14605.6 13818 14891.9 13078.2 14891.9 12242.9 c
14891.9 11264.4 14486.2 10453 13698.7 9808.64 c
12887.3 9140.41 11956.5 8710.83 10906.4 8519.91 c
11574.7 8519.91 12290.6 8328.99 13030.5 7947.14 c
13746.4 7565.3 14343 7040.26 14820.4 6419.77 c
15297.7 5775.4 15536.3 5107.17 15536.3 4391.22 c
15536.3 3508.2 15273.8 2744.51 14748.8 2076.28 c
14223.7 1408.05 13555.5 883.016 12744.1 525.037 c
11908.8 167.057 11073.5 0 10262.1 0 c
811.42 0 l
5345.83 1598.98 m
5345.83 1241 5441.29 1026.21 5632.21 954.612 c
5823.13 859.151 6133.38 835.285 6562.96 835.285 c
9593.85 835.285 l
10214.3 835.285 10787.1 978.477 11312.2 1312.59 c
11837.2 1646.71 12266.8 2076.28 12577 2625.18 c
12887.3 3174.08 13054.3 3770.72 13054.3 4391.22 c
13054.3 4987.85 12911.1 5584.48 12672.5 6157.25 c
12410 6730.01 12052 7207.32 11574.7 7589.17 c
11097.4 7971.01 10548.5 8161.93 9927.96 8161.93 c
5345.83 8161.93 l
5345.83 1598.98 l
5345.83 8782.43 m
8925.62 8782.43 l
9402.93 8782.43 9856.37 8854.03 10285.9 9044.95 c
10715.5 9212.01 11097.4 9474.52 11431.5 9808.64 c
11765.6 10142.8 12004.2 10500.7 12195.2 10930.3 c
12386.1 11336 12481.6 11765.6 12481.6 12242.9 c
12481.6 12648.6 12410 13054.3 12266.8 13436.2 c
12123.6 13818 11932.6 14152.1 11670.1 14462.4 c
11407.6 14772.6 11097.4 15011.3 10739.4 15202.2 c
10381.4 15369.3 9999.56 15464.7 9593.85 15464.7 c
6562.96 15464.7 l
6276.57 15464.7 6037.92 15440.8 5894.73 15417 c
5727.67 15393.1 5584.48 15321.5 5489.02 15226.1 c
5393.56 15106.7 5345.83 14939.7 5345.83 14701 c
5345.83 8782.43 l
f*
Q
Q
} def
/r {
391 0 26 0 364 442 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[2.71166 0 0 2.71166 0 0] cm
958.824 0 m
958.824 1290.72 l
1770.14 1290.72 2470.81 1327.6 3023.98 1475.11 c
3540.27 1622.62 3835.29 1954.52 3835.29 2470.81 c
3835.29 12538.5 l
3835.29 13202.3 3724.66 13681.7 3540.27 13976.7 c
3319 14271.7 3060.86 14419.2 2692.08 14493 c
2323.3 14566.7 1733.26 14603.6 958.824 14603.6 c
958.824 15894.3 l
6232.35 16300 l
6232.35 12686 l
6601.13 13755.4 7191.18 14640.5 7928.73 15304.3 c
8666.29 15968.1 9551.36 16300 10583.9 16300 c
11321.5 16300 11948.4 16078.7 12538.5 15636.2 c
13128.5 15193.7 13423.5 14640.5 13423.5 13939.8 c
13423.5 13497.3 13239.1 13091.6 12944.1 12759.7 c
12612.2 12427.8 12206.6 12280.3 11764 12280.3 c
11284.6 12280.3 10879 12427.8 10583.9 12759.7 c
10252 13054.8 10104.5 13460.4 10104.5 13939.8 c
10104.5 14603.6 10325.8 15046.2 10805.2 15341.2 c
10583.9 15341.2 l
9588.24 15341.2 8776.92 14972.4 8150 14234.8 c
7486.2 13497.3 7043.67 12612.2 6785.52 11579.6 c
6527.38 10510.2 6416.74 9477.6 6416.74 8518.78 c
6416.74 2470.81 l
6416.74 1659.5 7596.83 1290.72 9993.89 1290.72 c
9993.89 0 l
958.824 0 l
f*
Q
Q
} def
/e {
444 0 28 -10 415 448 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[2.74847 0 0 2.74847 0 0] cm
9059.6 -363.839 m
7567.86 -363.839 6221.65 0 4984.6 764.063 c
3747.54 1528.13 2765.18 2546.88 2073.88 3856.7 c
1346.21 5166.52 1018.75 6512.72 1018.75 7968.08 c
1018.75 9387.05 1309.82 10733.3 1964.73 12006.7 c
2619.64 13280.1 3492.86 14298.9 4657.14 15099.3 c
5821.43 15899.8 7094.87 16300 8550.22 16300 c
9641.74 16300 10624.1 16081.7 11460.9 15717.9 c
12261.4 15354 12952.7 14844.6 13498.4 14189.7 c
14007.8 13534.8 14408 12734.4 14699.1 11861.2 c
14953.8 10951.6 15099.3 9969.2 15099.3 8877.68 c
15099.3 8550.22 14953.8 8404.69 14735.5 8404.69 c
4184.15 8404.69 l
4184.15 8004.46 l
4184.15 5966.96 4584.38 4256.92 5384.82 2801.56 c
6185.27 1346.21 7531.47 654.911 9387.05 654.911 c
10114.7 654.911 10806 800.446 11460.9 1127.9 c
12079.5 1455.36 12625.2 1928.35 13098.2 2510.49 c
13534.8 3092.63 13862.3 3747.54 14044.2 4438.84 c
14044.2 4511.61 14117 4584.38 14189.7 4657.14 c
14262.5 4729.91 14335.3 4766.29 14408 4766.29 c
14735.5 4766.29 l
14953.8 4766.29 15099.3 4584.38 15099.3 4293.3 c
14735.5 2910.71 14007.8 1819.2 12879.9 945.982 c
11715.6 72.7679 10442.2 -363.839 9059.6 -363.839 c
4220.54 9314.29 m
12516.1 9314.29 l
12516.1 10187.5 12370.5 11133.5 12115.8 12079.5 c
11861.2 13025.4 11424.6 13789.5 10842.4 14408 c
10260.3 15026.6 9496.21 15354 8550.22 15354 c
7167.63 15354 6076.12 14699.1 5348.44 13425.7 c
4584.38 12115.8 4220.54 10769.6 4220.54 9314.29 c
f*
Q
Q
} def
/b {
555 0 26 -10 522 694 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.25767 0 0 4.25767 0 0] cm
2442.65 0 m
2442.65 13904.3 l
2442.65 14327.1 2372.19 14632.4 2254.76 14820.3 c
2113.83 15008.2 1949.42 15102.2 1714.55 15149.1 c
1479.68 15196.1 1103.89 15219.6 610.663 15219.6 c
610.663 16041.6 l
4086.74 16300 l
4086.74 8948.56 l
4321.61 9230.4 4626.95 9465.27 4979.25 9700.14 c
5331.56 9911.53 5707.35 10075.9 6106.63 10193.4 c
6505.91 10310.8 6905.19 10381.3 7327.95 10381.3 c
8032.57 10381.3 8666.72 10240.3 9277.38 9958.5 c
9888.04 9676.66 10404.8 9277.38 10851 8784.15 c
11273.8 8267.44 11626.1 7703.75 11884.4 7069.6 c
12119.3 6411.96 12260.2 5754.32 12260.2 5073.2 c
12260.2 4110.23 12025.4 3217.72 11555.6 2419.16 c
11085.9 1597.12 10475.2 939.481 9676.66 469.741 c
8878.1 0 7985.59 -234.87 7046.11 -234.87 c
6435.45 -234.87 5871.76 -70.4611 5308.07 211.383 c
4744.38 493.228 4274.64 892.507 3922.33 1409.22 c
3123.78 0 l
2442.65 0 l
4157.2 2301.73 m
4392.08 1738.04 4767.87 1268.3 5261.1 892.507 c
5754.32 516.715 6294.52 352.305 6905.19 352.305 c
7703.75 352.305 8361.38 587.176 8878.1 1056.92 c
9371.33 1526.66 9723.63 2113.83 9911.53 2818.44 c
10099.4 3523.05 10216.9 4274.64 10216.9 5073.2 c
10216.9 6388.47 10029 7374.93 9700.14 8079.54 c
9535.74 8384.87 9324.35 8666.72 9065.99 8925.07 c
8807.64 9183.43 8525.79 9394.81 8196.97 9535.74 c
7868.16 9676.66 7515.85 9770.61 7163.55 9770.61 c
6529.4 9770.61 5942.22 9606.2 5425.5 9277.38 c
4885.3 8948.56 4462.54 8502.31 4157.2 7938.62 c
4157.2 2301.73 l
f*
Q
Q
} def
/m {
833 0 30 0 815 442 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[5 0 0 5 0 0] cm
600 0 m
600 700 l
1040 700 1420 720 1720 800 c
2000 880 2160 1060 2160 1340 c
2160 6800 l
2160 7160 2100 7420 2000 7580 c
1880 7740 1740 7820 1540 7860 c
1340 7900 1020 7920 600 7920 c
600 8620 l
3500 8840 l
3500 6880 l
3760 7440 4160 7920 4680 8280 c
5200 8640 5760 8840 6400 8840 c
7920 8840 8820 8200 9100 6960 c
9360 7520 9740 7960 10260 8320 c
10780 8660 11340 8840 11960 8840 c
12560 8840 13080 8740 13500 8540 c
13900 8340 14220 8060 14420 7660 c
14620 7260 14740 6740 14740 6140 c
14740 1340 l
14740 1060 14880 880 15180 800 c
15460 720 15840 700 16300 700 c
16300 0 l
11720 0 l
11720 700 l
12160 700 12540 720 12840 800 c
13120 880 13280 1060 13280 1340 c
13280 6080 l
13280 6740 13180 7280 13000 7700 c
12800 8100 12420 8320 11840 8320 c
11060 8320 10420 8000 9920 7380 c
9420 6760 9180 6060 9180 5280 c
9180 1340 l
9180 1060 9320 880 9620 800 c
9900 720 10280 700 10740 700 c
10740 0 l
6160 0 l
6160 700 l
6600 700 6980 720 7280 800 c
7560 880 7720 1060 7720 1340 c
7720 6080 l
7720 6720 7620 7260 7440 7680 c
7240 8100 6860 8320 6280 8320 c
5500 8320 4860 8000 4360 7380 c
3860 6760 3620 6060 3620 5280 c
3620 1340 l
3620 1060 3760 880 4060 800 c
4340 720 4720 700 5180 700 c
5180 0 l
600 0 l
f*
Q
Q
} def
/u {
555 0 30 -10 537 442 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[3.29448 0 0 3.29448 0 0] cm
3278.21 3612.1 m
3278.21 10320.3 l
3278.21 10866.7 3187.15 11261.3 3035.38 11504.1 c
2853.26 11746.9 2640.78 11868.3 2337.24 11929.1 c
2033.71 11989.8 1548.04 12020.1 910.615 12020.1 c
910.615 13082.5 l
5494.04 13416.4 l
5494.04 3612.1 l
5494.04 2822.91 5524.39 2185.47 5645.81 1760.52 c
5767.23 1335.57 6010.06 1001.68 6374.3 789.199 c
6738.55 546.369 7345.62 455.307 8165.18 455.307 c
9257.91 455.307 10107.8 910.615 10745.3 1821.23 c
11382.7 2731.84 11716.6 3763.87 11716.6 4917.32 c
11716.6 10320.3 l
11716.6 10866.7 11625.5 11261.3 11473.7 11504.1 c
11291.6 11746.9 11079.1 11868.3 10775.6 11929.1 c
10472.1 11989.8 9986.41 12020.1 9348.98 12020.1 c
9348.98 13082.5 l
13932.4 13416.4 l
13932.4 2762.2 l
13932.4 2215.83 13993.1 1821.23 14175.2 1578.4 c
14327 1335.57 14569.8 1214.15 14873.4 1153.45 c
15176.9 1092.74 15632.2 1062.38 16300 1062.38 c
16300 0 l
11807.6 -303.538 l
11807.6 2215.83 l
11443.4 1456.98 10897 849.907 10229.2 394.6 c
9561.45 -60.7076 8802.61 -303.538 8013.41 -303.538 c
6556.42 -303.538 5402.98 0 4553.07 607.076 c
3703.17 1214.15 3278.21 2215.83 3278.21 3612.1 c
f*
Q
Q
} def
/N {
750 0 31 0 718 683 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.40491 0 0 4.40491 0 0] cm
703.76 0 m
703.76 794.568 l
2247.49 794.568 3042.06 1225.91 3042.06 2133.98 c
3042.06 14574.7 l
2542.62 14665.5 1748.05 14710.9 703.76 14710.9 c
703.76 15505.4 l
5039.83 15505.4 l
5107.94 15505.4 5153.34 15460 5198.75 15414.6 c
13235.2 3586.91 l
13235.2 13371.4 l
13235.2 14256.8 12440.7 14710.9 10896.9 14710.9 c
10896.9 15505.4 l
16300 15505.4 l
16300 14710.9 l
14733.6 14710.9 13961.7 14256.8 13961.7 13371.4 c
13961.7 204.318 l
13961.7 158.914 13916.3 113.51 13870.9 68.1058 c
13802.8 22.7019 13757.4 0 13734.7 0 c
13462.3 0 l
13371.4 0 13326 22.7019 13303.3 90.8078 c
3768.52 14120.6 l
3768.52 2133.98 l
3768.52 1225.91 4540.39 794.568 6106.82 794.568 c
6106.82 0 l
703.76 0 l
f*
Q
Q
} def
/eight {
500 0 42 -21 457 666 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.08589 0 0 4.08589 0 0] cm
1027.93 3720.12 m
1027.93 4699.1 1346.1 5555.71 1982.43 6314.41 c
2618.77 7048.65 3450.9 7684.99 4478.83 8198.95 c
3573.27 8786.34 l
3010.36 9128.98 2545.35 9618.47 2202.7 10230.3 c
1860.06 10842.2 1688.74 11478.5 1688.74 12163.8 c
1688.74 12947 1884.53 13632.3 2300.6 14268.6 c
2692.19 14905 3255.11 15394.4 3940.39 15761.6 c
4625.68 16104.2 5335.44 16300 6118.62 16300 c
6828.38 16300 7513.66 16153.2 8198.95 15859.5 c
8884.23 15565.8 9422.67 15125.2 9863.21 14586.8 c
10303.8 14048.3 10524 13387.5 10524 12628.8 c
10524 12065.9 10377.2 11552 10132.4 11086.9 c
9863.21 10621.9 9496.1 10205.9 9055.56 9838.74 c
8615.02 9447.15 8125.53 9128.98 7636.04 8884.23 c
9031.08 7978.68 l
9667.42 7538.14 10205.9 6999.7 10597.4 6314.41 c
10989 5629.13 11184.8 4894.9 11184.8 4160.66 c
11184.8 3279.58 10940.1 2471.92 10475.1 1737.69 c
9985.59 1003.45 9373.72 465.015 8590.54 73.4234 c
7807.36 -318.168 6975.23 -513.964 6118.62 -513.964 c
5262.01 -513.964 4454.35 -342.643 3671.17 0 c
2887.99 318.168 2251.65 807.658 1762.16 1468.47 c
1272.67 2104.8 1027.93 2863.51 1027.93 3720.12 c
2349.55 3720.12 m
2349.55 3059.31 2520.87 2471.92 2887.99 1933.48 c
3230.63 1395.05 3695.65 978.979 4283.03 685.285 c
4870.42 391.592 5482.28 244.745 6118.62 244.745 c
7048.65 244.745 7905.26 513.964 8688.44 1076.88 c
9471.62 1615.32 9863.21 2349.55 9863.21 3279.58 c
9863.21 3573.27 9789.79 3891.44 9667.42 4185.14 c
9545.05 4478.83 9373.72 4772.52 9153.45 5017.27 c
8933.18 5262.01 8688.44 5482.28 8419.22 5653.6 c
5139.64 7782.88 l
4625.68 7489.19 4160.66 7146.55 3720.12 6730.48 c
3279.58 6314.41 2961.41 5849.4 2716.67 5335.44 c
2471.92 4821.47 2349.55 4283.03 2349.55 3720.12 c
4038.29 11184.8 m
6999.7 9275.83 l
7684.99 9667.42 8247.9 10132.4 8688.44 10719.8 c
9128.98 11282.7 9349.25 11919.1 9349.25 12628.8 c
9349.25 13167.3 9177.93 13681.2 8884.23 14146.2 c
8566.07 14586.8 8174.47 14953.9 7684.99 15198.6 c
7195.5 15443.4 6657.06 15590.2 6094.14 15590.2 c
5604.65 15590.2 5090.69 15492.3 4601.2 15296.5 c
4087.24 15100.8 3671.17 14831.5 3353 14439.9 c
3010.36 14048.3 2863.51 13607.8 2863.51 13118.3 c
2863.51 12335.1 3255.11 11698.8 4038.29 11184.8 c
f*
Q
Q
} def
/six {
500 0 42 -21 457 666 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.08589 0 0 4.08589 0 0] cm
6118.62 -513.964 m
5090.69 -513.964 4258.56 -244.745 3573.27 269.219 c
2887.99 807.658 2374.02 1492.94 2006.91 2349.55 c
1639.79 3206.16 1395.05 4111.71 1248.2 5041.74 c
1101.35 5971.77 1027.93 6926.28 1027.93 7905.26 c
1027.93 9177.93 1272.67 10475.1 1786.64 11796.7 c
2276.13 13093.8 3010.36 14170.7 3989.34 15027.3 c
4968.32 15859.5 6118.62 16300 7464.72 16300 c
8003.15 16300 8517.12 16177.6 9006.61 15981.8 c
9496.1 15761.6 9863.21 15443.4 10156.9 15051.8 c
10426.1 14635.7 10573 14146.2 10573 13558.9 c
10573 13216.2 10450.6 12947 10230.3 12726.7 c
9985.59 12482 9716.37 12384.1 9398.2 12384.1 c
9055.56 12384.1 8786.34 12482 8566.07 12726.7 c
8321.32 12947 8223.42 13216.2 8223.42 13558.9 c
8223.42 13877 8321.32 14146.2 8566.07 14391 c
8786.34 14611.3 9055.56 14733.6 9398.2 14733.6 c
9520.57 14733.6 l
9300.3 15027.3 9006.61 15223.1 8639.49 15370 c
8247.9 15516.8 7856.31 15590.2 7464.72 15590.2 c
6975.23 15590.2 6510.21 15467.9 6094.14 15272.1 c
5678.08 15051.8 5310.96 14758.1 4968.32 14391 c
4625.68 14023.9 4356.46 13632.3 4136.19 13191.7 c
3891.44 12751.2 3720.12 12237.2 3597.75 11674.3 c
3475.38 11086.9 3401.95 10573 3377.48 10083.5 c
3328.53 9593.99 3328.53 8957.66 3328.53 8223.42 c
3622.22 8884.23 4013.81 9422.67 4552.25 9863.21 c
5066.22 10279.3 5653.6 10499.6 6338.89 10499.6 c
7048.65 10499.6 7709.46 10352.7 8296.85 10059 c
8884.23 9765.32 9398.2 9349.25 9838.74 8835.29 c
10279.3 8296.85 10597.4 7709.46 10842.2 7048.65 c
11062.5 6363.36 11184.8 5702.55 11184.8 5017.27 c
11184.8 4038.29 10964.6 3132.73 10548.5 2276.13 c
10108 1419.52 9520.57 734.234 8737.39 244.745 c
7954.2 -244.745 7097.6 -513.964 6118.62 -513.964 c
6118.62 244.745 m
6754.96 244.745 7244.44 367.117 7636.04 660.811 c
8003.15 954.505 8272.37 1321.62 8468.17 1811.11 c
8639.49 2276.13 8761.86 2741.14 8810.81 3230.63 c
8859.76 3720.12 8884.23 4307.51 8884.23 5017.27 c
8884.23 5947.3 8835.29 6730.48 8737.39 7391.29 c
8639.49 8027.63 8419.22 8615.02 8027.63 9104.51 c
7636.04 9593.99 7024.17 9863.21 6240.99 9863.21 c
5555.71 9863.21 5017.27 9618.47 4601.2 9177.93 c
4160.66 8737.39 3866.97 8174.47 3671.17 7489.19 c
3475.38 6803.9 3377.48 6167.57 3377.48 5531.23 c
3377.48 5310.96 3377.48 5139.64 3401.95 5041.74 c
3401.95 5017.27 3401.95 4992.79 3401.95 4992.79 c
3401.95 4968.32 3377.48 4943.84 3377.48 4919.37 c
3377.48 4209.61 3450.9 3499.85 3597.75 2790.09 c
3744.59 2055.86 4013.81 1468.47 4429.88 978.979 c
4821.47 489.49 5384.38 244.745 6118.62 244.745 c
f*
Q
Q
} def
/four {
500 0 28 0 471 666 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.08589 0 0 4.08589 0 0] cm
685.285 4038.29 m
685.285 4894.9 l
8247.9 16177.6 l
8296.85 16251.1 8370.27 16300 8492.64 16300 c
8859.76 16300 l
9031.08 16300 9128.98 16202.1 9128.98 16030.8 c
9128.98 4894.9 l
11527.5 4894.9 l
11527.5 4038.29 l
9128.98 4038.29 l
9128.98 1639.79 l
9128.98 1297.15 9349.25 1076.88 9838.74 978.979 c
10328.2 881.081 10866.7 856.607 11503 856.607 c
11503 0 l
4772.52 0 l
4772.52 856.607 l
5384.38 856.607 5922.82 881.081 6412.31 978.979 c
6901.8 1076.88 7146.55 1297.15 7146.55 1639.79 c
7146.55 4038.29 l
685.285 4038.29 l
1492.94 4894.9 m
7293.39 4894.9 l
7293.39 13558.9 l
1492.94 4894.9 l
f*
Q
Q
} def
/three {
500 0 42 -21 457 666 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.08589 0 0 4.08589 0 0] cm
2325.08 1884.53 m
2716.67 1321.62 3230.63 905.556 3866.97 636.336 c
4503.3 367.117 5213.06 244.745 5947.3 244.745 c
6877.33 244.745 7562.61 636.336 7954.2 1443.99 c
8345.8 2251.65 8566.07 3181.68 8566.07 4209.61 c
8566.07 4650.15 8517.12 5115.17 8443.69 5580.18 c
8345.8 6045.2 8198.95 6485.74 8003.15 6877.33 c
7807.36 7268.92 7538.14 7587.09 7195.5 7831.83 c
6852.85 8076.58 6412.31 8198.95 5922.82 8198.95 c
4307.51 8198.95 l
4160.66 8198.95 4087.24 8272.37 4087.24 8419.22 c
4087.24 8639.49 l
4087.24 8761.86 4160.66 8835.29 4307.51 8835.29 c
5653.6 8933.18 l
6216.52 8933.18 6681.53 9128.98 7073.12 9569.52 c
7464.72 10010.1 7733.93 10524 7905.26 11160.4 c
8076.58 11772.2 8174.47 12359.6 8174.47 12922.5 c
8174.47 13705.7 7978.68 14342 7611.56 14831.5 c
7244.44 15321 6681.53 15590.2 5947.3 15590.2 c
5310.96 15590.2 4723.57 15467.9 4160.66 15223.1 c
3597.75 14978.4 3157.21 14635.7 2814.56 14170.7 c
2839.04 14170.7 2863.51 14195.2 2887.99 14195.2 c
2912.46 14195.2 2936.94 14195.2 2985.89 14195.2 c
3353 14195.2 3671.17 14048.3 3915.92 13803.6 c
4160.66 13558.9 4283.03 13240.7 4283.03 12898 c
4283.03 12530.9 4160.66 12212.8 3915.92 11968 c
3671.17 11723.3 3353 11600.9 2985.89 11600.9 c
2618.77 11600.9 2300.6 11723.3 2055.86 11968 c
1811.11 12212.8 1688.74 12530.9 1688.74 12898 c
1688.74 13583.3 1884.53 14195.2 2325.08 14709.2 c
2741.14 15223.1 3279.58 15614.7 3940.39 15883.9 c
4601.2 16153.2 5262.01 16300 5947.3 16300 c
6436.79 16300 6950.75 16226.6 7513.66 16079.7 c
8052.1 15932.9 8566.07 15712.6 9006.61 15443.4 c
9447.15 15149.7 9814.26 14807.1 10108 14391 c
10377.2 13950.5 10524 13461 10524 12922.5 c
10524 12237.2 10352.7 11600.9 10059 11013.5 c
9765.32 10426.1 9349.25 9936.64 8810.81 9520.57 c
8272.37 9080.03 7684.99 8761.86 7048.65 8566.07 c
7758.41 8419.22 8443.69 8150 9080.03 7758.41 c
9716.37 7366.82 10205.9 6852.85 10597.4 6240.99 c
10989 5604.65 11184.8 4943.84 11184.8 4234.08 c
11184.8 3328.53 10915.6 2520.87 10426.1 1786.64 c
9936.64 1052.4 9275.83 465.015 8492.64 73.4234 c
7684.99 -318.168 6828.38 -513.964 5947.3 -513.964 c
5164.11 -513.964 4405.41 -367.117 3646.7 -73.4234 c
2863.51 195.796 2251.65 611.862 1762.16 1199.25 c
1272.67 1786.64 1027.93 2471.92 1027.93 3304.05 c
1027.93 3695.65 1150.3 4038.29 1419.52 4307.51 c
1688.74 4576.73 2031.38 4723.57 2447.45 4723.57 c
2692.19 4723.57 2936.94 4650.15 3157.21 4527.78 c
3377.48 4405.41 3548.8 4234.08 3671.17 4013.81 c
3793.54 3769.07 3866.97 3548.8 3866.97 3304.05 c
3866.97 2887.99 3720.12 2545.35 3450.9 2276.13 c
3157.21 2006.91 2839.04 1884.53 2447.45 1884.53 c
2325.08 1884.53 l
f*
Q
Q
} def
/two {
500 0 50 0 449 666 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.08589 0 0 4.08589 0 0] cm
1223.72 0 m
1223.72 660.811 l
1223.72 685.285 1223.72 734.234 1272.67 783.183 c
5066.22 4992.79 l
5629.13 5604.65 6094.14 6118.62 6461.26 6559.16 c
6803.9 6975.23 7171.02 7464.72 7513.66 8003.15 c
7856.31 8541.59 8150 9104.51 8345.8 9691.89 c
8541.59 10254.8 8663.96 10866.7 8663.96 11503 c
8663.96 12163.8 8541.59 12800.2 8296.85 13412 c
8052.1 14023.9 7684.99 14513.4 7195.5 14880.5 c
6706.01 15247.6 6094.14 15443.4 5408.86 15443.4 c
4699.1 15443.4 4062.76 15223.1 3499.85 14807.1 c
2912.46 14366.5 2520.87 13828.1 2300.6 13142.8 c
2349.55 13142.8 2447.45 13167.3 2569.82 13167.3 c
2912.46 13167.3 3230.63 13044.9 3499.85 12800.2 c
3744.59 12555.4 3891.44 12237.2 3891.44 11845.6 c
3891.44 11454.1 3744.59 11135.9 3499.85 10891.1 c
3230.63 10621.9 2912.46 10499.6 2569.82 10499.6 c
2178.23 10499.6 1860.06 10621.9 1615.32 10891.1 c
1346.1 11160.4 1223.72 11478.5 1223.72 11845.6 c
1223.72 12433 1321.62 13020.4 1566.37 13558.9 c
1786.64 14097.3 2104.8 14562.3 2545.35 15002.9 c
2985.89 15418.9 3475.38 15737.1 4013.81 15957.4 c
4552.25 16177.6 5139.64 16300 5775.98 16300 c
6706.01 16300 7562.61 16104.2 8370.27 15712.6 c
9177.93 15321 9814.26 14758.1 10279.3 14023.9 c
10744.3 13289.6 10989 12457.5 10989 11503 c
10989 10793.2 10817.7 10132.4 10524 9496.1 c
10205.9 8859.76 9814.26 8272.37 9324.78 7758.41 c
8835.29 7219.97 8223.42 6632.58 7464.72 5971.77 c
6706.01 5310.96 6216.52 4870.42 5971.77 4650.15 c
3206.16 1982.43 l
5555.71 1982.43 l
6706.01 1982.43 7660.51 1982.43 8443.69 2006.91 c
9226.88 2006.91 9642.94 2055.86 9691.89 2104.8 c
9887.69 2300.6 10083.5 3059.31 10279.3 4356.46 c
10989 4356.46 l
10303.8 0 l
1223.72 0 l
f*
Q
Q
} def
/one {
500 0 87 0 421 666 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.08589 0 0 4.08589 0 0] cm
2276.13 0 m
2276.13 856.607 l
4307.51 856.607 5335.44 1101.35 5335.44 1639.79 c
5335.44 14488.9 l
4478.83 14072.8 3401.95 13877 2129.28 13877 c
2129.28 14733.6 l
4111.71 14733.6 5629.13 15247.6 6657.06 16300 c
6999.7 16300 l
7048.65 16300 7122.07 16275.5 7171.02 16226.6 c
7219.97 16177.6 7244.44 16128.7 7244.44 16079.7 c
7244.44 1639.79 l
7244.44 1101.35 8247.9 856.607 10303.8 856.607 c
10303.8 0 l
2276.13 0 l
f*
Q
Q
} def
/five {
500 0 50 -21 449 666 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.08589 0 0 4.08589 0 0] cm
2129.28 2790.09 m
2276.13 2300.6 2545.35 1860.06 2887.99 1468.47 c
3230.63 1076.88 3646.7 783.183 4136.19 562.913 c
4601.2 342.643 5090.69 244.745 5604.65 244.745 c
6779.43 244.745 7587.09 685.285 8027.63 1615.32 c
8468.17 2520.87 8712.91 3622.22 8712.91 4943.84 c
8712.91 5506.76 8688.44 5971.77 8688.44 6363.36 c
8663.96 6754.96 8615.02 7122.07 8517.12 7489.19 c
8370.27 8052.1 8101.05 8541.59 7709.46 8982.13 c
7317.87 9422.67 6877.33 9642.94 6338.89 9642.94 c
5775.98 9642.94 5310.96 9545.05 4919.37 9398.2 c
4527.78 9226.88 4185.14 9031.08 3940.39 8810.81 c
3695.65 8566.07 3475.38 8345.8 3279.58 8101.05 c
3083.78 7856.31 2985.89 7709.46 2936.94 7709.46 c
2667.72 7709.46 l
2618.77 7709.46 2545.35 7733.93 2496.4 7782.88 c
2447.45 7831.83 2422.97 7880.78 2422.97 7929.73 c
2422.97 16104.2 l
2422.97 16153.2 2447.45 16177.6 2496.4 16226.6 c
2545.35 16275.5 2594.29 16300 2667.72 16300 c
2741.14 16300 l
3818.02 15761.6 4992.79 15516.8 6240.99 15516.8 c
7440.24 15516.8 8615.02 15761.6 9740.84 16300 c
9814.26 16300 l
9863.21 16300 9912.16 16275.5 9961.11 16226.6 c
10010.1 16177.6 10034.5 16153.2 10034.5 16104.2 c
10034.5 15883.9 l
10034.5 15786 10010.1 15761.6 9985.59 15761.6 c
9422.67 15027.3 8712.91 14439.9 7880.78 14023.9 c
7048.65 13607.8 6167.57 13412 5286.49 13412 c
4625.68 13412 3964.87 13485.4 3279.58 13681.2 c
3279.58 9055.56 l
3818.02 9496.1 4283.03 9789.79 4723.57 9985.59 c
5139.64 10181.4 5678.08 10279.3 6363.36 10279.3 c
7244.44 10279.3 8052.1 10010.1 8761.86 9496.1 c
9471.62 8957.66 10010.1 8296.85 10401.7 7464.72 c
10793.2 6632.58 10989 5775.98 10989 4919.37 c
10989 3940.39 10744.3 3034.84 10254.8 2202.7 c
9765.32 1370.57 9128.98 709.76 8296.85 220.27 c
7464.72 -269.219 6583.63 -513.964 5604.65 -513.964 c
4797 -513.964 4062.76 -293.694 3377.48 97.8979 c
2692.19 489.49 2178.23 1052.4 1786.64 1762.16 c
1395.05 2447.45 1223.72 3206.16 1223.72 3989.34 c
1223.72 4356.46 1321.62 4650.15 1566.37 4894.9 c
1811.11 5115.17 2104.8 5237.54 2471.92 5237.54 c
2814.56 5237.54 3132.73 5115.17 3377.48 4870.42 c
3622.22 4625.68 3744.59 4331.98 3744.59 3989.34 c
3744.59 3646.7 3622.22 3353 3377.48 3108.26 c
3132.73 2863.51 2814.56 2741.14 2471.92 2741.14 c
2422.97 2741.14 2349.55 2741.14 2276.13 2741.14 c
2202.7 2741.14 2153.75 2765.62 2129.28 2790.09 c
f*
Q
Q
} def
/period {
277 0 84 0 194 110 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[1.19018 0 0 1.19018 0 0] cm
7057.73 4621.13 m
7057.73 5881.44 7477.84 6973.71 8402.06 7897.94 c
9326.29 8738.14 10418.6 9242.27 11678.9 9242.27 c
12435.1 9242.27 13191.2 8990.21 13947.4 8570.1 c
14619.6 8150 15207.7 7561.86 15627.8 6889.69 c
16047.9 6133.51 16300 5377.32 16300 4621.13 c
16300 3360.82 15795.9 2268.56 14955.7 1344.33 c
14031.4 420.103 12939.2 0 11678.9 0 c
10418.6 0 9326.29 420.103 8402.06 1344.33 c
7477.84 2268.56 7057.73 3360.82 7057.73 4621.13 c
f*
Q
Q
} def
/zero {
500 0 39 -21 460 666 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.08589 0 0 4.08589 0 0] cm
6118.62 -513.964 m
4111.71 -513.964 2741.14 293.694 2031.38 1933.48 c
1297.15 3573.27 954.505 5531.23 954.505 7807.36 c
954.505 9226.88 1076.88 10548.5 1346.1 11796.7 c
1590.84 13044.9 2104.8 14097.3 2887.99 14978.4 c
3646.7 15859.5 4723.57 16300 6118.62 16300 c
7195.5 16300 8076.58 16030.8 8761.86 15516.8 c
9447.15 14978.4 9961.11 14317.6 10328.2 13485.4 c
10670.9 12653.3 10915.6 11747.7 11062.5 10793.2 c
11184.8 9838.74 11258.3 8835.29 11258.3 7807.36 c
11258.3 6387.84 11111.4 5090.69 10866.7 3866.97 c
10597.4 2643.24 10083.5 1590.84 9324.78 758.709 c
8566.07 -73.4234 7489.19 -513.964 6118.62 -513.964 c
6118.62 97.8979 m
7024.17 97.8979 7709.46 562.913 8150 1492.94 c
8590.54 2422.97 8859.76 3450.9 8957.66 4576.73 c
9055.56 5702.55 9128.98 6926.28 9128.98 8198.95 c
9128.98 9422.67 9055.56 10548.5 8957.66 11576.4 c
8859.76 12604.4 8590.54 13558.9 8150 14391 c
7709.46 15223.1 7024.17 15663.7 6118.62 15663.7 c
5188.59 15663.7 4503.3 15223.1 4062.76 14391 c
3622.22 13558.9 3328.53 12604.4 3230.63 11576.4 c
3132.73 10548.5 3083.78 9422.67 3083.78 8198.95 c
3083.78 7268.92 3083.78 6412.31 3132.73 5629.13 c
3181.68 4821.47 3304.05 3989.34 3499.85 3132.73 c
3695.65 2276.13 3989.34 1566.37 4429.88 978.979 c
4845.95 391.592 5408.86 97.8979 6118.62 97.8979 c
f*
Q
Q
} def
end
currentdict end
/T3_13_0 exch definefont pop
%%EndResource
/F13_0 /T3_13_0 1 1
[ /period/B/zero/two/S/m/four/H
  /b/six/eight/space/A/N/u/one
  /R/three/G/T/five/e/r/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%BeginResource: font T3_18_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-34 -250 1048 750] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 2 dict def
CharProcs begin
/slash {
500 0 56 -249 443 750 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.60123 0 0 4.60123 0 0] cm
1217.07 -4976.93 m
1217.07 -4933.47 1217.07 -4890 1238.8 -4890 c
8802 16039.2 l
8823.73 16126.1 8867.2 16191.3 8954.13 16234.8 c
9019.33 16278.3 9106.27 16300 9193.2 16300 c
9323.6 16300 9410.53 16256.5 9497.47 16169.6 c
9584.4 16082.7 9627.87 15995.7 9627.87 15865.3 c
9627.87 15778.4 l
2064.67 -5150.8 l
1977.73 -5324.67 1825.6 -5411.6 1651.73 -5411.6 c
1521.33 -5411.6 1434.4 -5368.13 1347.47 -5281.2 c
1260.53 -5194.27 1217.07 -5085.6 1217.07 -4976.93 c
f*
Q
Q
} def
/F {
643 0 37 0 750 683 setcachedevice
q
[0.01 0 0 0.01 0 0] cm
q
[4.60123 0 0 4.60123 0 0] cm
1021.47 0 m
869.333 0 804.133 86.9333 804.133 282.533 c
804.133 326 825.867 391.2 847.6 478.133 c
869.333 565.067 891.067 630.267 934.533 673.733 c
978 717.2 1021.47 760.667 1086.67 760.667 c
1956 760.667 2586.27 804.133 2934 912.8 c
3107.87 956.267 3260 1151.87 3346.93 1499.6 c
6324.4 13431.2 l
6346.13 13561.6 6367.87 13670.3 6367.87 13735.5 c
6367.87 13887.6 6280.93 13974.5 6107.07 13996.3 c
5824.53 14039.7 5302.93 14083.2 4542.27 14083.2 c
4390.13 14083.2 4324.93 14170.1 4324.93 14365.7 c
4324.93 14409.2 4346.67 14474.4 4368.4 14561.3 c
4390.13 14648.3 4411.87 14713.5 4455.33 14756.9 c
4498.8 14800.4 4542.27 14843.9 4607.47 14843.9 c
16082.7 14843.9 l
16213.1 14843.9 16300 14735.2 16300 14561.3 c
15778.4 10062.5 l
15778.4 10019.1 15734.9 9975.6 15691.5 9932.13 c
15648 9888.67 15604.5 9866.93 15561.1 9866.93 c
15365.5 9866.93 l
15213.3 9866.93 15148.1 9953.87 15148.1 10149.5 c
15235.1 10801.5 15278.5 11323.1 15278.5 11757.7 c
15278.5 12474.9 15104.7 12996.5 14800.4 13344.3 c
14496.1 13692 14104.9 13887.6 13626.8 13974.5 c
13148.7 14039.7 12496.7 14083.2 11670.8 14083.2 c
9345.33 14083.2 l
8954.13 14083.2 8693.33 14039.7 8562.93 13974.5 c
8432.53 13909.3 8302.13 13692 8215.2 13344.3 c
6824.27 7802.27 l
8454.27 7802.27 l
8975.87 7802.27 9410.53 7824 9758.27 7889.2 c
10084.3 7932.67 10366.8 8041.33 10584.1 8215.2 c
10801.5 8367.33 10975.3 8606.4 11127.5 8910.67 c
11257.9 9214.93 11410 9627.87 11540.4 10149.5 c
11583.9 10279.9 11649.1 10345.1 11757.7 10345.1 c
11953.3 10345.1 l
12083.7 10345.1 12170.7 10236.4 12170.7 10062.5 c
10844.9 4694.4 l
10779.7 4564 10714.5 4498.8 10627.6 4498.8 c
10432 4498.8 l
10279.9 4498.8 10214.7 4585.73 10214.7 4781.33 c
10258.1 4911.73 10279.9 5042.13 10301.6 5150.8 c
10323.3 5237.73 10345.1 5389.87 10388.5 5585.47 c
10410.3 5759.33 10432 5933.2 10432 6085.33 c
10432 6498.27 10236.4 6759.07 9866.93 6867.73 c
9497.47 6976.4 9019.33 7041.6 8432.53 7041.6 c
6650.4 7041.6 l
5237.73 1412.67 l
5194.27 1260.53 5194.27 1195.33 5194.27 1195.33 c
5194.27 1021.47 5237.73 912.8 5346.4 912.8 c
5715.87 804.133 6454.8 760.667 7563.2 760.667 c
7693.6 760.667 7780.53 652 7780.53 478.133 c
7715.33 260.8 7671.87 130.4 7650.13 86.9333 c
7628.4 21.7333 7541.47 0 7411.07 0 c
1021.47 0 l
f*
Q
Q
} def
end
currentdict end
/T3_18_0 exch definefont pop
%%EndResource
/F18_0 /T3_18_0 1 1
[ /F/slash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
false pdfSetup
%%EndSetup
%%Page: 1 1
%%PageMedia: 283x227
%%BeginPageSetup
%%PageOrientation: Portrait
283 227 pdfSetupPaper
pdfStartPage
0 0 283 227 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 283 227 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
6.92188 4.07812 2823.08 2265.92 re
W
/DeviceGray {} cs
[1] sc
6.92188 4.07812 2826.16 2271.84 re
f
457.984 422.645 2232 1728 re
f
Q
q
458.02 422.68 2232 1728 re
W
20 w
1 j
/DeviceRGB {} CS
[1 0 0] SC
665.938 422.645 m
665.938 491.762 l
828.23 491.762 l
828.23 439.922 l
990.523 439.922 l
990.523 491.762 l
1152.81 491.762 l
1152.81 560.883 l
1315.11 560.883 l
1315.11 543.602 l
1477.4 543.602 l
1477.4 889.203 l
1639.69 889.203 l
1639.69 1407.6 l
1801.98 1407.6 l
1801.98 1442.16 l
1964.27 1442.16 l
1964.27 1079.28 l
2126.57 1079.28 l
2126.57 578.164 l
2288.86 578.164 l
2288.86 422.645 l
S
q
/DeviceRGB {} cs
/DeviceRGB {} CS
[0 0 0] sc
[0 0 0] SC
0 w
645.785 422.645 m
645.785 439.922 l
823.535 439.922 l
823.535 422.645 l
1001.29 422.645 l
1179.04 422.645 l
1179.04 612.723 l
1356.79 612.723 l
1356.79 1338.48 l
1534.54 1338.48 l
1534.54 1649.52 l
1712.29 1649.52 l
1712.29 2029.68 l
1890.05 2029.68 l
1890.05 975.602 l
2067.8 975.602 l
2067.8 457.203 l
2245.55 457.203 l
2245.55 439.922 l
2423.3 439.922 l
2423.3 422.645 l
W
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [0 0 72 72] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding 120 /x put
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 1 dict def
CharProcs begin
/x {
72 0 0 0 72 72 setcachedevice
[0.1 0 0 0.1 0 0] cm
q
0 0 720 720 re
W
[60 60] 0 d
0 w
1 j
-360 360 m
360 1080 l
-240 240 m
480 960 l
-120 120 m
600 840 l
0 0 m
720 720 l
120 -120 m
840 600 l
240 -240 m
960 480 l
360 -360 m
1080 360 l
Sf
Q
} def
end
currentdict end
/xpdfTile0 exch definefont pop
/xpdfTile0 findfont setfont
fCol
gsave [10 0 0 10 7 4] concat
0 1 2 { 0 exch 72 mul m 0 1 3 { pop (x) show } for } for
grestore
Q
[60 60] 0 d
/DeviceGray {} CS
[0] SC
645.785 422.645 m
645.785 439.922 l
823.535 439.922 l
823.535 422.645 l
1001.29 422.645 l
1179.04 422.645 l
1179.04 612.723 l
1356.79 612.723 l
1356.79 1338.48 l
1534.54 1338.48 l
1534.54 1649.52 l
1712.29 1649.52 l
1712.29 2029.68 l
1890.05 2029.68 l
1890.05 975.602 l
2067.8 975.602 l
2067.8 457.203 l
2245.55 457.203 l
2245.55 439.922 l
2423.3 439.922 l
2423.3 422.645 l
S
Q
q
6.92188 4.07812 2823.08 2265.92 re
W
/DeviceGray {} cs
[0] sc
457.984 422.645 m
457.984 462.645 l
f
5 w
1 j
/DeviceGray {} CS
[0] SC
457.984 422.645 m
457.984 462.645 l
S
457.984 2150.64 m
457.984 2110.64 l
f
457.984 2150.64 m
457.984 2110.64 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.6734 29.9359] Tm
0 0 Td
/F13_0 12 Tf
(\002\000)
[6
0
3.324
0] Tj
0.14445 TJm
(\024)
[6
0] Tj
Q
829.984 422.645 m
829.984 462.645 l
f
829.984 422.645 m
829.984 462.645 l
S
829.984 2150.64 m
829.984 2110.64 l
f
829.984 2150.64 m
829.984 2110.64 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 76.1 29.9359] Tm
0 0 Td
/F13_0 12 Tf
(\017\000)
[6
0
3.324
0] Tj
0.14445 TJm
(\002)
[6
0] Tj
Q
1201.98 422.645 m
1201.98 462.645 l
f
1201.98 422.645 m
1201.98 462.645 l
S
1201.98 2150.64 m
1201.98 2110.64 l
f
1201.98 2150.64 m
1201.98 2110.64 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 113.363 29.9359] Tm
0 0 Td
/F13_0 12 Tf
(\017\000)
[6
0
3.324
0] Tj
0.14445 TJm
(\024)
[6
0] Tj
Q
1573.98 422.645 m
1573.98 462.645 l
f
1573.98 422.645 m
1573.98 462.645 l
S
1573.98 2150.64 m
1573.98 2110.64 l
f
1573.98 2150.64 m
1573.98 2110.64 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 150.273 29.9359] Tm
0 0 Td
/F13_0 12 Tf
(\003\000)
[6
0
3.324
0] Tj
0.14445 TJm
(\002)
[6
0] Tj
Q
1945.98 422.645 m
1945.98 462.645 l
f
1945.98 422.645 m
1945.98 462.645 l
S
1945.98 2150.64 m
1945.98 2110.64 l
f
1945.98 2150.64 m
1945.98 2110.64 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 187.536 29.9359] Tm
0 0 Td
/F13_0 12 Tf
(\003\000)
[6
0
3.324
0] Tj
0.14445 TJm
(\024)
[6
0] Tj
Q
2317.98 422.645 m
2317.98 462.645 l
f
2317.98 422.645 m
2317.98 462.645 l
S
2317.98 2150.64 m
2317.98 2110.64 l
f
2317.98 2150.64 m
2317.98 2110.64 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 224.627 29.9359] Tm
0 0 Td
/F13_0 12 Tf
(\021\000)
[6
0
3.324
0] Tj
0.14445 TJm
(\002)
[6
0] Tj
Q
2689.98 422.645 m
2689.98 462.645 l
f
2689.98 422.645 m
2689.98 462.645 l
S
2689.98 2150.64 m
2689.98 2110.64 l
f
2689.98 2150.64 m
2689.98 2110.64 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 261.889 29.9359] Tm
0 0 Td
/F13_0 12 Tf
(\021\000)
[6
0
3.324
0] Tj
0.14445 TJm
(\024)
[6
0] Tj
-131.991 -17.8281 Td
/F18_0 14 Tf
(\000)
[9.002
0] Tj
-122.98827 -21.39919 Td
/F13_0 9.8 Tf
(\003\024\002)
[4.9
0
4.9
0
4.9
0] Tj
-108.28827 -17.8281 Td
/F18_0 14 Tf
(\001\000)
[7
0
9.002
0] Tj
-92.28517 -21.39919 Td
/F13_0 9.8 Tf
(\021\024\002)
[4.9
0
4.9
0
4.9
0] Tj
Q
457.984 422.645 m
497.984 422.645 l
f
457.984 422.645 m
497.984 422.645 l
S
2689.98 422.645 m
2649.98 422.645 l
f
2689.98 422.645 m
2649.98 422.645 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 36.7516 39.2641] Tm
0 0 Td
/F13_0 12 Tf
(\002)
[6
0] Tj
Q
457.984 768.242 m
497.984 768.242 l
f
457.984 768.242 m
497.984 768.242 l
S
2689.98 768.242 m
2649.98 768.242 l
f
2689.98 768.242 m
2649.98 768.242 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 30.8766 73.8242] Tm
0 0 Td
/F13_0 12 Tf
(\003\002)
[6
0
6
0] Tj
Q
457.984 1113.84 m
497.984 1113.84 l
f
457.984 1113.84 m
497.984 1113.84 l
S
2689.98 1113.84 m
2649.98 1113.84 l
f
2689.98 1113.84 m
2649.98 1113.84 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 30.6109 108.384] Tm
0 0 Td
/F13_0 12 Tf
(\006\002)
[6
0
6
0] Tj
Q
457.984 1459.44 m
497.984 1459.44 l
f
457.984 1459.44 m
497.984 1459.44 l
S
2689.98 1459.44 m
2649.98 1459.44 l
f
2689.98 1459.44 m
2649.98 1459.44 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 30.7828 142.944] Tm
0 0 Td
/F13_0 12 Tf
(\011\002)
[6
0
6
0] Tj
Q
457.984 1805.04 m
497.984 1805.04 l
f
457.984 1805.04 m
497.984 1805.04 l
S
2689.98 1805.04 m
2649.98 1805.04 l
f
2689.98 1805.04 m
2649.98 1805.04 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 30.7828 177.504] Tm
0 0 Td
/F13_0 12 Tf
(\012\002)
[6
0
6
0] Tj
Q
457.984 2150.64 m
497.984 2150.64 l
f
457.984 2150.64 m
497.984 2150.64 l
S
2689.98 2150.64 m
2649.98 2150.64 l
f
2689.98 2150.64 m
2649.98 2150.64 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 25.3297 212.064] Tm
0 0 Td
/F13_0 12 Tf
(\017\002\002)
[6
0
6
0
6
0] Tj
[0 1 -1 0 17.6109 104.367] Tm
0 0 Td
/F13_0 14 Tf
(\015\016)
[10.5
0
7.77
0] Tj
-0.190081 TJm
(\005\010)
[11.662
0
7.77
0] Tj
-0.162179 TJm
(\025)
[6.216
0] Tj
0.138637 TJm
(\026)
[5.474
0] Tj
Q
10 w
457.984 2150.64 m
2689.98 2150.64 l
S
2689.98 422.645 m
2689.98 2150.64 l
S
457.984 422.645 m
2689.98 422.645 l
S
457.984 422.645 m
457.984 2150.64 l
S
/DeviceGray {} cs
[1] sc
507.984 1791.89 836.406 308.75 re
f
507.984 1791.89 836.406 308.75 re
S
20 w
/DeviceRGB {} CS
[1 0 0] SC
547.984 1990.64 200 70 re
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 82.7984 199.064] Tm
0 0 Td
/F13_0 10 Tf
(\001\014\023)
[7.08
0
7.5
0
7.22
0] Tj
-0.148926 TJm
(\013\014\022)
[3.33
0
7.5
0
7.84
0] Tj
-0.179443 TJm
(\015)
[7.5
0] Tj
Q
q
/DeviceRGB {} cs
/DeviceRGB {} CS
[0 0 0] sc
[0 0 0] SC
0 w
547.984 1851.27 200 70 re
W
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [0 0 72 72] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding 120 /x put
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 1 dict def
CharProcs begin
/x {
72 0 0 0 72 72 setcachedevice
[0.1 0 0 0.1 0 0] cm
q
0 0 720 720 re
W
[60 60] 0 d
0 w
1 j
-360 360 m
360 1080 l
-240 240 m
480 960 l
-120 120 m
600 840 l
0 0 m
720 720 l
120 -120 m
840 600 l
240 -240 m
960 480 l
360 -360 m
1080 360 l
Sf
Q
} def
end
currentdict end
/xpdfTile0 exch definefont pop
/xpdfTile0 findfont setfont
fCol
gsave [10 0 0 10 7 4] concat
2 1 2 { 0 exch 72 mul m 0 1 1 { pop (x) show } for } for
grestore
Q
[60 60] 0 d
/DeviceGray {} CS
[0] SC
547.984 1851.27 200 70 re
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 82.7984 185.127] Tm
0 0 Td
/F13_0 10 Tf
(\007\020)
[7.5
0
7.36
0] Tj
0.179443 TJm
(\004)
[5.55
0] Tj
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_13_0
%%+ font T3_18_0
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
